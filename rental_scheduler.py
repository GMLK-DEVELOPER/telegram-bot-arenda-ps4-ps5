import threading
import time
import json
import os
from datetime import datetime, timedelta
from bot import load_json_file, save_json_file, notify_admin, notify_user_about_rental_end, safe_send_message

DATA_DIR = 'data'
CONSOLES_FILE = os.path.join(DATA_DIR, 'consoles.json')
USERS_FILE = os.path.join(DATA_DIR, 'users.json')
RENTALS_FILE = os.path.join(DATA_DIR, 'rentals.json')
ADMIN_SETTINGS_FILE = os.path.join(DATA_DIR, 'admin_settings.json')

class RentalScheduler:
    def __init__(self):
        self.running = False
        self.thread = None
        
    def start(self):
        """–ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞"""
        if not self.running:
            self.running = True
            self.thread = threading.Thread(target=self._run_scheduler, daemon=True)
            self.thread.start()
            print("üïí –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∞—Ä–µ–Ω–¥—ã –∑–∞–ø—É—â–µ–Ω")
    
    def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞"""
        self.running = False
        if self.thread:
            self.thread.join()
            print("üïí –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∞—Ä–µ–Ω–¥—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    def _run_scheduler(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞"""
        while self.running:
            try:
                self._check_expired_rentals()
                self._send_rental_reminders()
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ –∞—Ä–µ–Ω–¥—ã: {e}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç)
            settings = load_json_file(ADMIN_SETTINGS_FILE)
            check_interval = settings.get('notification_frequency', 5) * 60  # –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –º–∏–Ω—É—Ç—ã –≤ —Å–µ–∫—É–Ω–¥—ã
            time.sleep(check_interval)
    
    def _check_expired_rentals(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∞—Ä–µ–Ω–¥"""
        settings = load_json_file(ADMIN_SETTINGS_FILE)
        max_rental_hours = settings.get('max_rental_hours', 24)  # –ú–∞–∫—Å–∏–º—É–º 24 —á–∞—Å–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        
        rentals = load_json_file(RENTALS_FILE)
        consoles = load_json_file(CONSOLES_FILE)
        users = load_json_file(USERS_FILE)
        
        current_time = datetime.now()
        expired_rentals = []
        
        for rental_id, rental in rentals.items():
            if rental['status'] == 'active':
                start_time = datetime.fromisoformat(rental['start_time'])
                duration = current_time - start_time
                hours = duration.total_seconds() / 3600
                
                # –ï—Å–ª–∏ –∞—Ä–µ–Ω–¥–∞ –ø—Ä–µ–≤—ã—Å–∏–ª–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è
                if hours >= max_rental_hours:
                    expired_rentals.append((rental_id, rental, hours))
        
        # –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∞—Ä–µ–Ω–¥—ã
        for rental_id, rental, hours in expired_rentals:
            try:
                console = consoles.get(rental['console_id'], {})
                user = users.get(rental['user_id'], {})
                
                # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å
                total_hours = max(1, int(hours))
                total_cost = total_hours * console.get('rental_price', 0)
                
                # –ó–∞–≤–µ—Ä—à–∞–µ–º –∞—Ä–µ–Ω–¥—É
                rental['end_time'] = current_time.isoformat()
                rental['status'] = 'completed'
                rental['total_cost'] = total_cost
                rental['ended_by'] = 'system_timeout'
                
                # –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –∫–æ–Ω—Å–æ–ª—å
                if rental['console_id'] in consoles:
                    consoles[rental['console_id']]['status'] = 'available'
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if rental['user_id'] in users:
                    users[rental['user_id']]['total_spent'] = users[rental['user_id']].get('total_spent', 0) + total_cost
                
                print(f"‚è∞ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∞—Ä–µ–Ω–¥–∞ {rental_id} (–ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –≤—Ä–µ–º–µ–Ω–∏)")
                
                # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                self._notify_about_auto_end(rental['user_id'], console, total_cost, total_hours, user)
                
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∞—Ä–µ–Ω–¥—ã {rental_id}: {e}")
        
        if expired_rentals:
            save_json_file(RENTALS_FILE, rentals)
            save_json_file(CONSOLES_FILE, consoles)
            save_json_file(USERS_FILE, users)
    
    def _send_rental_reminders(self):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ —Å–∫–æ—Ä–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∞—Ä–µ–Ω–¥—ã"""
        settings = load_json_file(ADMIN_SETTINGS_FILE)
        reminder_hours = settings.get('reminder_hours', 23)  # –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞ —á–∞—Å –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        max_rental_hours = settings.get('max_rental_hours', 24)
        
        rentals = load_json_file(RENTALS_FILE)
        consoles = load_json_file(CONSOLES_FILE)
        users = load_json_file(USERS_FILE)
        
        current_time = datetime.now()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        push_enabled = settings.get('push_notifications_enabled', True)
        critical_enabled = settings.get('critical_notifications_enabled', True)
        
        if not push_enabled:
            return  # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã
        
        for rental_id, rental in rentals.items():
            if rental['status'] == 'active':
                start_time = datetime.fromisoformat(rental['start_time'])
                duration = current_time - start_time
                hours = duration.total_seconds() / 3600
                
                # –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
                remaining_hours = max_rental_hours - hours
                console = consoles.get(rental['console_id'], {})
                
                # –ó–∞ 2 —á–∞—Å–∞ –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è
                if (remaining_hours <= 2 and remaining_hours > 1.5 and 
                    not rental.get('reminder_2h_sent', False)):
                    self._send_push_notification(rental, console, remaining_hours, "2_hours", rental_id)
                    rental['reminder_2h_sent'] = True
                    save_json_file(RENTALS_FILE, rentals)
                
                # –ó–∞ 1 —á–∞—Å –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è
                elif (remaining_hours <= 1 and remaining_hours > 0.5 and 
                      not rental.get('reminder_1h_sent', False)):
                    self._send_push_notification(rental, console, remaining_hours, "1_hour", rental_id)
                    rental['reminder_1h_sent'] = True
                    save_json_file(RENTALS_FILE, rentals)
                
                # –ó–∞ 30 –º–∏–Ω—É—Ç –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è
                elif (remaining_hours <= 0.5 and remaining_hours > 0.25 and 
                      not rental.get('reminder_30m_sent', False)):
                    self._send_push_notification(rental, console, remaining_hours, "30_minutes", rental_id)
                    rental['reminder_30m_sent'] = True
                    save_json_file(RENTALS_FILE, rentals)
                
                # –ó–∞ 10 –º–∏–Ω—É—Ç –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è (–∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ)
                elif (remaining_hours <= 0.17 and remaining_hours > 0.08 and 
                      not rental.get('reminder_10m_sent', False) and critical_enabled):
                    self._send_push_notification(rental, console, remaining_hours, "10_minutes", rental_id)
                    rental['reminder_10m_sent'] = True
                    save_json_file(RENTALS_FILE, rentals)
    
    def _notify_about_auto_end(self, user_id, console, total_cost, hours, user):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∞—Ä–µ–Ω–¥—ã"""
        try:
            # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            user_message = f"‚è∞ **–ê—Ä–µ–Ω–¥–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞**\n\n"
            user_message += f"üéÆ –ö–æ–Ω—Å–æ–ª—å: {console.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–Ω—Å–æ–ª—å')}\n"
            user_message += f"‚è∞ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {hours} —á–∞—Å–æ–≤\n"
            user_message += f"üí∞ –ö –æ–ø–ª–∞—Ç–µ: {total_cost} –ª–µ–π\n\n"
            user_message += f"üïí –ê—Ä–µ–Ω–¥–∞ –±—ã–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.\n"
            user_message += f"–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞!"
            
            safe_send_message(user_id, user_message)
            
            # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
            admin_message = f"‚è∞ **–ê—Ä–µ–Ω–¥–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞**\n\n"
            admin_message += f"üë§ {user.get('full_name', user.get('first_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'))}\n"
            admin_message += f"üì± {user.get('phone_number', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
            admin_message += f"üéÆ {console.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–Ω—Å–æ–ª—å')}\n"
            admin_message += f"‚è∞ {hours} —á–∞—Å–æ–≤\n"
            admin_message += f"üí∞ {total_cost} –ª–µ–π\n"
            admin_message += f"ü§ñ –ó–∞–≤–µ—Ä—à–µ–Ω–æ —Å–∏—Å—Ç–µ–º–æ–π (–ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –≤—Ä–µ–º–µ–Ω–∏)"
            
            notify_admin(admin_message)
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–± –∞–≤—Ç–æ–∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏: {e}")
    
    def _send_push_notification(self, rental, console, remaining_hours, notification_type, rental_id):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        try:
            user_id = rental['user_id']
            console_name = console.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–Ω—Å–æ–ª—å')
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            notification_configs = {
                "2_hours": {
                    "emoji": "‚è∞",
                    "title": "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ–± –∞—Ä–µ–Ω–¥–µ",
                    "urgency": "info",
                    "time_text": "2 —á–∞—Å–∞"
                },
                "1_hour": {
                    "emoji": "üïê",
                    "title": "–°–∫–æ—Ä–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∞—Ä–µ–Ω–¥—ã",
                    "urgency": "warning", 
                    "time_text": "1 —á–∞—Å"
                },
                "30_minutes": {
                    "emoji": "‚ö†Ô∏è",
                    "title": "–í–ù–ò–ú–ê–ù–ò–ï! –°–∫–æ—Ä–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ",
                    "urgency": "high",
                    "time_text": "30 –º–∏–Ω—É—Ç"
                },
                "10_minutes": {
                    "emoji": "üö®",
                    "title": "–ö–†–ò–¢–ò–ß–ï–°–ö–û–ï! –ü–æ—Å–ª–µ–¥–Ω–∏–µ –º–∏–Ω—É—Ç—ã",
                    "urgency": "critical",
                    "time_text": "10 –º–∏–Ω—É—Ç"
                }
            }
            
            config = notification_configs.get(notification_type, notification_configs["1_hour"])
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ä–æ—á–Ω–æ—Å—Ç–∏
            if config["urgency"] == "critical":
                message = f"{config['emoji']} **{config['title']}** {config['emoji']}\n\n"
                message += f"üéÆ –ö–æ–Ω—Å–æ–ª—å: **{console_name}**\n"
                message += f"‚è≥ –î–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: **{config['time_text']}**\n\n"
                message += f"üö® **–°–†–û–ß–ù–û –ó–ê–í–ï–†–®–ò–¢–ï –ê–†–ï–ù–î–£!**\n"
                message += f"üí∞ –¢–µ–∫—É—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {self._calculate_current_cost(rental, console)} –ª–µ–π\n\n"
            elif config["urgency"] == "high":
                message = f"{config['emoji']} **{config['title']}**\n\n"
                message += f"üéÆ –ö–æ–Ω—Å–æ–ª—å: {console_name}\n"
                message += f"‚è≥ –î–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: **{config['time_text']}**\n\n"
                message += f"‚ö° –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–≤–µ—Ä—à–∏—Ç—å –∞—Ä–µ–Ω–¥—É –∑–∞—Ä–∞–Ω–µ–µ\n"
                message += f"üí∞ –¢–µ–∫—É—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {self._calculate_current_cost(rental, console)} –ª–µ–π\n\n"
            else:
                message = f"{config['emoji']} **{config['title']}**\n\n"
                message += f"üéÆ –ö–æ–Ω—Å–æ–ª—å: {console_name}\n"
                message += f"‚è≥ –î–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {config['time_text']}\n\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é
            message += f"üí° **–°–ø–æ—Å–æ–±—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è:**\n"
            message += f"‚Ä¢ –ö–æ–º–∞–Ω–¥–∞: `/end {rental_id}`\n"
            message += f"‚Ä¢ –ö–Ω–æ–ø–∫–∞ –≤ \"üìä –ú–æ–π –∫–∞–±–∏–Ω–µ—Ç\"\n"
            message += f"‚Ä¢ –í–µ–±-–ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n\n"
            message += f"üìû –ü–æ–º–æ—â—å: –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É"
            
            from bot import bot
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å –ø–æ–≤—ã—à–µ–Ω–Ω—ã–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            if config["urgency"] == "critical":
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–ª—É—á–∞–µ–≤
                safe_send_message(user_id, "üö®üö®üö® –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï üö®üö®üö®")
                safe_send_message(user_id, message)
            else:
                safe_send_message(user_id, message)
            
            print(f"üîî Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ ({notification_type}) –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è –∞—Ä–µ–Ω–¥—ã {rental_id}")
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")
    
    def _calculate_current_cost(self, rental, console):
        """–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ç–µ–∫—É—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞—Ä–µ–Ω–¥—ã"""
        try:
            start_time = datetime.fromisoformat(rental['start_time'])
            current_time = datetime.now()
            duration = current_time - start_time
            hours = max(1, int(duration.total_seconds() / 3600))
            return hours * console.get('rental_price', 0)
        except:
            return 0

    def _send_reminder_to_user(self, user_id, console, remaining_hours, rental_id):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (—É—Å—Ç–∞—Ä–µ–≤—à–∞—è —Ñ—É–Ω–∫—Ü–∏—è)"""
        try:
            reminder_message = f"‚è∞ **–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ–± –∞—Ä–µ–Ω–¥–µ**\n\n"
            reminder_message += f"üéÆ –ö–æ–Ω—Å–æ–ª—å: {console.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–Ω—Å–æ–ª—å')}\n"
            reminder_message += f"‚è≥ –î–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {remaining_hours:.1f} —á–∞—Å–æ–≤\n\n"
            reminder_message += f"üí° –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å –∞—Ä–µ–Ω–¥—É –¥–æ—Å—Ä–æ—á–Ω–æ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É:\n"
            reminder_message += f"`/end {rental_id}`\n\n"
            reminder_message += f"–ò–ª–∏ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É –≤ —Ä–∞–∑–¥–µ–ª–µ \"üìä –ú–æ–π –∫–∞–±–∏–Ω–µ—Ç\""
            
            from bot import bot
            safe_send_message(user_id, reminder_message)
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: {e}")

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
scheduler = RentalScheduler()

def start_rental_scheduler():
    """–ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∞—Ä–µ–Ω–¥—ã"""
    scheduler.start()

def stop_rental_scheduler():
    """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∞—Ä–µ–Ω–¥—ã"""
    scheduler.stop()